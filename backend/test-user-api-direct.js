const axios = require('axios');

const API_URL = 'http://localhost:3001/api/v1';

async function testUserAPI() {
  console.log('üß™ TESTE DIRETO DA API DE USU√ÅRIOS (desenvolvimento)\n');
  console.log('='.repeat(50));
  
  try {
    // Em desenvolvimento, o middleware autentica automaticamente
    console.log('\nüìã 1. LISTAGEM DE USU√ÅRIOS (sem token):');
    console.log('-'.repeat(40));
    
    try {
      const listResponse = await axios.get(`${API_URL}/users`);
      console.log(`‚úÖ Status: ${listResponse.status}`);
      console.log(`‚úÖ Resposta: ${listResponse.data.status}`);
      
      const users = listResponse.data.data || [];
      console.log(`‚úÖ Total de usu√°rios: ${users.length}`);
      
      users.forEach(user => {
        console.log(`\n   üë§ ${user.name || 'Sem nome'}`);
        console.log(`      Email: ${user.email}`);
        console.log(`      Role: ${user.role}`);
        console.log(`      Ativo: ${user.isActive ? 'Sim' : 'N√£o'}`);
        console.log(`      Master: ${user.isMaster ? 'Sim' : 'N√£o'}`);
      });
    } catch (error) {
      console.log('‚ùå Erro ao listar usu√°rios:', error.response?.status || error.message);
      if (error.response?.data) {
        console.log('   Detalhes:', error.response.data);
      }
    }
    
    // 2. Testar busca de perfil
    console.log('\n\nüë§ 2. MEU PERFIL (sem token):');
    console.log('-'.repeat(40));
    
    try {
      const profileResponse = await axios.get(`${API_URL}/users/profile`);
      const profile = profileResponse.data.data;
      
      console.log(`‚úÖ Perfil carregado:`);
      console.log(`   Nome: ${profile.name}`);
      console.log(`   Email: ${profile.email}`);
      console.log(`   Role: ${profile.role}`);
      console.log(`   Master: ${profile.isMaster ? 'Sim' : 'N√£o'}`);
      console.log(`   Ativo: ${profile.isActive ? 'Sim' : 'N√£o'}`);
    } catch (error) {
      console.log('‚ùå Erro ao buscar perfil:', error.response?.status || error.message);
      if (error.response?.data) {
        console.log('   Detalhes:', error.response.data);
      }
    }
    
    console.log('\n\n' + '='.repeat(50));
    console.log('üí° AN√ÅLISE:');
    console.log('='.repeat(50));
    console.log('\nO middleware de autentica√ß√£o est√° configurado para:');
    console.log('1. Em desenvolvimento, buscar admin@boicontrol.com no banco');
    console.log('2. Se n√£o encontrar, buscar admin@boigordo.com');
    console.log('3. Se n√£o encontrar nenhum, criar usu√°rio tempor√°rio');
    console.log('\n‚ö†Ô∏è Se o erro 500 persistir, √© porque:');
    console.log('   - O usu√°rio tempor√°rio tem ID "dev-user" (n√£o existe no banco)');
    console.log('   - A API tenta buscar este ID no banco e falha');
    console.log('\n‚úÖ SOLU√á√ÉO:');
    console.log('   - O usu√°rio admin@boicontrol.com j√° foi criado no banco');
    console.log('   - Ele tem role ADMIN e isMaster = true');
    console.log('   - O middleware deve encontr√°-lo e usar o usu√°rio real');
    
  } catch (error) {
    console.error('\n‚ùå Erro geral:', error.message);
  }
}

testUserAPI();